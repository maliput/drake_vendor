name: gcc

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  PACKAGE_NAME: drake_vendor
  ROS_DISTRO: foxy
  ROS_WS: maliput_ws

jobs:
  compile_and_test:
    name: Compile and test
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/maliput/ci_foxy_image:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v4
      with:
        path: ${{ env.ROS_WS }}/src/${{ env.PACKAGE_NAME }}
    # clone private dependencies
    - uses: actions/checkout@v4
      with:
        repository: maliput/maliput
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput
    - uses: actions/checkout@v4
      with:
        repository: maliput/maliput_py
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_py
    - uses: actions/checkout@v4
      with:
        repository: maliput/maliput_object
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_object
    - uses: actions/checkout@v4
      with:
        repository: maliput/maliput_dragway
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_dragway
    - uses: actions/checkout@v4
      with:
        repository: maliput/maliput_multilane
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_multilane
    - uses: actions/checkout@v4
      with:
        repository: maliput/maliput_malidrive
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_malidrive
    - uses: actions/checkout@v4
      with:
        repository: maliput/delphyne
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/delphyne
    - uses: actions/checkout@v4
      with:
        repository: maliput/delphyne_gui
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/delphyne_gui
    - uses: actions/checkout@v4
      with:
        repository: maliput/maliput_integration
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_integration
    - uses: actions/checkout@v4
      with:
        repository: maliput/maliput_integration_tests
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput_integration_tests
    - name: check if dependencies have a matching branch
      shell: bash
      working-directory: ${{ env.ROS_WS }}/src
      run: ./${PACKAGE_NAME}/.github/try_vcs_checkout ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}} .
    # clone public dependencies
    - name: vcs import
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: vcs import src < src/${PACKAGE_NAME}/.github/dependencies.repos
    - run: colcon graph
      shell: bash
      working-directory: ${{ env.ROS_WS }}
    - name: rosdep install
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        rosdep update --include-eol-distros;
        rosdep install  -i -y --rosdistro ${ROS_DISTRO} --skip-keys "pybind11" --from-paths src
    - name: install drake
      shell: bash
      working-directory: ${{ env.ROS_WS }}/src/drake_vendor
      run: ./drake_installer
    - name: colcon build libraries
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        . /opt/ros/${ROS_DISTRO}/setup.bash;
        colcon build --event-handlers=console_direct+
    - name: colcon test
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        . /opt/ros/${ROS_DISTRO}/setup.bash;
        . install/setup.bash;
        colcon test --event-handlers=console_direct+;
        colcon test-result --verbose;
